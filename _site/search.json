[
  {
    "objectID": "Reports/All_Units/2025-05-01_Link_Checker_Report_All_Units.html",
    "href": "Reports/All_Units/2025-05-01_Link_Checker_Report_All_Units.html",
    "title": "2025-05-01, Link Checker Report for All Units",
    "section": "",
    "text": "Data Source\nThis report accesssed Voyager via reportsdb.library.yale.edu.\n\n\nVoyager Tables and Columns Queried\n- bib_master.bib_id\n- elink_index.url_host\n- elink_index.link\n- location.location_code\n- bib_mfhd.bib_id\n- mfhd_master.location_id\n- location.location_id\n             \n\n\nVoyager Locations Queried\n\n‘ART’\n‘BASS’\n‘BEINECKE’\n‘CLASSICS’\n‘DIV’\n‘FILM’\n‘MARCIVE’\n‘MARX’\n‘MEDICAL’\n‘MICRO’\n‘MSSA’\n‘MUSIC’\n‘WALPOLE’\n‘YCBA’\n‘CHI’,\n‘JPN’\n‘HEB’\n‘SEA’\n‘SEE’\n‘SML’\n‘TS’\n‘MFHD_WALPOLE’\n‘MFHD_MSSA’\n“IA”\n\n\n\nTotal Links and Errors from all units\n\n\n\n\n\n\n\n\n\n\nTotal_Links\nTotal_Errors\n\n\n\n\n0\n247171\n32773\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLinks and Errors by Library Unit\n\n\n\n\n\n\n\n\n\n\nunit\nTotal_Links\nTotal_Errors\n\n\n\n\n0\nMARCIVE\n54924\n1553\n\n\n1\nART\n6691\n1471\n\n\n2\nMSSA\n4252\n823\n\n\n3\nMARX\n15985\n678\n\n\n4\nYCBA\n2912\n557\n\n\n5\nSML\n57137\n519\n\n\n6\nDIV\n10495\n429\n\n\n7\nHEB\n792\n293\n\n\n8\nBEINECKE\n32841\n203\n\n\n9\nJPN\n1351\n199\n\n\n10\nSEA\n717\n193\n\n\n11\nMUSIC\n4131\n124\n\n\n12\nMICRO\n19681\n120\n\n\n13\nMEDICAL\n6840\n70\n\n\n14\nFILM\n2824\n44\n\n\n15\nCHI\n1016\n32\n\n\n16\nBASS\n3909\n24\n\n\n17\nSEE\n705\n20\n\n\n18\nWALPOLE\n404\n17\n\n\n19\nTEST\n157\n11\n\n\n20\nCLASSICS\n1009\n7\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLinks and Errors by Domain\n\n\n\n\n\n\n\n\n\n\nDomain\nTotal_Links\nTotal_Errors\n\n\n\n\n0\nwww.loc.gov\n56722\n1831\n\n\n1\npurl.access.gpo.gov\n57696\n1031\n\n\n2\nilibri.casalini.it\n502\n419\n\n\n3\nlibraries.casalini.it\n808\n372\n\n\n4\nwww.columbia.edu\n284\n279\n\n\n...\n...\n...\n...\n\n\n2370\n23sandy.com\n1\n0\n\n\n2371\n212berlin.com\n1\n0\n\n\n2372\n0-link.gale.com.catalogue.libraries.london.ac.uk\n1\n0\n\n\n2373\n0-galenet.galegroup.com.catalogue.libraries.lo...\n39\n0\n\n\n2374\n0-ebookcentral.proquest.com.catalogue.librarie...\n1\n0\n\n\n\n\n2375 rows × 3 columns\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nError Types\nGroup by the Status column and show frequency."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Link Checker Report",
    "section": "",
    "text": "This report summarizes the results of the automated link checker designed to verify the health of URLs associated with catalog records. The report is intended for both management and unit-specific analysis. It details:\n\nWorking vs. Non-working Links: A breakdown of URLs that are functional versus those that encounter errors.\nData Aggregation: Totals and aggregated counts of errors by unit and by domain.\nVisualizations: Graphs showing distributions of errors, detailed tables, and bar charts for quick insight.\n\nThis documentation explains the underlying code processes, the database design (using Voyager data structures), and error capture mechanisms, along with recommendations for librarian interpretation and follow-up."
  },
  {
    "objectID": "Documentation/03_error_handling.html",
    "href": "Documentation/03_error_handling.html",
    "title": "Error Handling and Captured Data",
    "section": "",
    "text": "Several types of errors are monitored:\nHTTP Status Errors: URLs returning non-2xx HTTP codes (e.g., 400, 404) are flagged.\nConnection and Timeout Errors: Failures during the HTTP request or Selenium page load trigger error capture.\nSelenium-Specific Errors: If the document does not reach a “complete” state within a specified timeout, a READY_STATE_TIMEOUT_ERROR is raised.\nEach error, along with contextual data (e.g., page source when available), is recorded. This granular logging is useful for troubleshooting and for determining whether the error is a transient network hiccup or a persistent issue needing manual remediation."
  },
  {
    "objectID": "Documentation/02_data_collection_storage.html",
    "href": "Documentation/02_data_collection_storage.html",
    "title": "Link Checker Report",
    "section": "",
    "text": "Data Collection and Storage The script collects several key pieces of information per URL:\nURL Status Codes: Both the Requests and Selenium responses are logged, with the healthier (successful) response prioritized.\nError Information: Any issues encountered (e.g., timeout, connection error, inability to reach complete page load) are serialized into JSON and stored.\nUnit Identification: Each URL is linked to a specific unit so that aggregate reporting per unit is easily generated.\nTimestamps: Verification times are recorded to check data freshness and to allow rechecking only when necessary.\nThese data points are stored in the SQLite database and exported to CSV for manual review and for feeding into visualization scripts."
  },
  {
    "objectID": "Documentation/04_recomendations_librarians.html",
    "href": "Documentation/04_recomendations_librarians.html",
    "title": "Recommendations and Librarian Guidance",
    "section": "",
    "text": "For librarians reviewing these reports:\nInterpretation:\n\nSuccessful Links,\n\nCodes 200-299:\nHigh numbers here indicate good data quality.\n\nError Links,\n\nCodes 100-199, 300-399, 400-499, 500-599, Connection error, Timeout Error, Unknown:\nThese need investigation. For example, a high volume of 404 errors could indicate outdated links in the catalog record.\n\n\nFurther Action:\n\nConsider scheduling periodic re-validation to ensure the catalog remains current.\nUse detailed domain error charts to reach out to specific content providers or IT support teams for external sites.\nThe detailed error logs (including error types and timestamps) can support claims for bulk corrections if many records are affected."
  },
  {
    "objectID": "Documentation/01_code_process.html",
    "href": "Documentation/01_code_process.html",
    "title": "Code and Process Description",
    "section": "",
    "text": "The automated link checker is built using several Python modules and libraries. Here is an outline of the flow and key components:\n2.1. Input Processing and URL Checking Input and Caching: The main script (see init.py ​ ) reads URLs from an input CSV file containing bibliographic records, the domain, URL, and a location identifier. A caching dictionary (url_list) is used to avoid re-checking duplicate URLs.\nMultiple Verification Methods: Two different methods validate the URLs:\nRequests-based Check: Uses the Python requests library to send a HEAD request. (See url_status.py ​ .)\nSelenium-based Check: In case of non-successful responses or exceptions from Requests, the system falls back to Selenium. This approach bypasses bot-detection and allows JavaScript to load, ensuring that the page’s final state is accurately determined.\nError Handling and Fallbacks: The function select_code_and_error intelligently decides which method’s result to store. If both methods encounter issues, the error messages are captured and stored as a JSON string so that both the request and Selenium outputs are recorded.\n2.2. Data Recording and Duplication Avoidance Database and CSV Output: The system uses an SQLite database (configured via SQLAlchemy) to store verification results. Each check record is saved in the bib_url_status_report table with columns for bibliographic ID, URL, domain, status code, error details, unit, and the date/time of the check. Additionally, results are recorded in a CSV file for legacy use. (Refer to database.py ​ and models.py ​ for details.)\n2.3. Selenium and Driver Configuration Driver Setup: The Selenium driver is configured in driver.py ​ . Options include headless operation (optionally disabled to view the browser) and logging preferences are set for troubleshooting and performance analysis.\nPage Ready and Network Logs: The Selenium method uses JavaScript execution to check the document’s ready state and extract a status code from browser logs. If the expected state isn’t reached within a timeout, a custom exception is raised (see exception.py ​ ).\n2.4. Error Recording and Notification Error Capturing: Any errors encountered during URL processing (e.g., timeouts, status code not found, connection issues) are captured and logged using the record_error function in errors.py ​ . This ensures that all anomalies are recorded along with the URL’s metadata.\nEmail Notifications: The module notifications.py ​ provides functions to format and send email notifications to unit contacts. An email report (as exemplified in email_report_msu_manager.pdf ​ ) contains a summary of error counts by type, making it actionable for librarians and unit managers."
  },
  {
    "objectID": "Reports/Individual_Units/2025-05-01_HEB.html",
    "href": "Reports/Individual_Units/2025-05-01_HEB.html",
    "title": "2025-05-01, Link Checker Report for HEB",
    "section": "",
    "text": "Database connected\n\n\n\nOverview\n\n\n'\\n### Summary for Unit: `HEB`\\n\\n- **Total Links Checked**: 648\\n- **Total Errors**: 289\\n- **Successful Links**: 359\\n- **Error Rate**: 44.60%\\n'\n\n\n\n\nLinks and Errors by Domain\n\n\n\n\n\n\n\n\n\n\nDomain\nStatus\nError_Count\n\n\n\n\n0\nwww.yiddishbookcenter.org\n{\"requests\": \"403\", \"selenium\": \"403\"}\n412\n\n\n1\nyizkor.nypl.org\n{\"requests\": \"404\", \"selenium\": \"404\"}\n130\n\n\n2\nyizkor.nypl.org\n404\n67\n\n\n3\nwww.archive.org\nException: &lt;class 'selenium.common.exceptions....\n57\n\n\n4\nwww.yiddishbookcenter.org\n403\n33\n\n\n5\nwww.hebrewbooks.org\n403\n30\n\n\n6\nwww.hebrewbooks.org\n{\"requests\": \"403\", \"selenium\": \"403\"}\n24\n\n\n7\nweb.nli.org.il\n{\"requests\": \"403\", \"selenium\": \"403\"}\n8\n\n\n8\nbeinecke.library.yale.edu\nException: &lt;class 'selenium.common.exceptions....\n7\n\n\n9\nwww.cbs.gov.il\nException: &lt;class 'selenium.common.exceptions....\n7\n\n\n10\nlibrary.osu.edu.proxy.lib.ohio-state.edu\nunknown_status\n6\n\n\n11\nwww.imdb.com\n403\n5\n\n\n12\nledorot.gov.il\n{\"requests\": \"None\", \"selenium\": \"None\"}\n4\n\n\n13\nweb.nli.org.il\n403\n4\n\n\n14\nwww.jpress.org.il\n{\"requests\": \"403\", \"selenium\": \"403\"}\n4\n\n\n15\nhdl.handle.net\nException: &lt;class 'selenium.common.exceptions....\n3\n\n\n16\nwww.jstor.org\n403\n3\n\n\n17\nwww.jstor.org\n{\"requests\": \"403\", \"selenium\": \"403\"}\n3\n\n\n18\nbibpurl.oclc.org\n{\"requests\": \"403\", \"selenium\": \"403\"}\n2\n\n\n19\ncatalog.hathitrust.org\nException: &lt;class 'selenium.common.exceptions....\n2\n\n\n20\ndigital.cjh.org\nException: &lt;class 'selenium.common.exceptions....\n2\n\n\n21\ndigital.library.yale.edu\n{\"requests\": \"404\", \"selenium\": \"404\"}\n2\n\n\n22\neu01.alma.exlibrisgroup.com\n{\"requests\": \"403\", \"selenium\": \"403\"}\n2\n\n\n23\nledorot.gov.il\nException: &lt;class 'selenium.common.exceptions....\n2\n\n\n24\nlibraries.indiana.edu\n403\n2\n\n\n25\nlibraries.indiana.edu\n{\"requests\": \"403\", \"selenium\": \"403\"}\n2\n\n\n26\nmuse.jhu.edu\nException: &lt;class 'selenium.common.exceptions....\n2\n\n\n27\nprimage.tau.ac.il\n{\"requests\": \"None\", \"selenium\": \"None\"}\n2\n\n\n28\nreshit.hartman.org.il\n{\"requests\": \"403\", \"selenium\": \"403\"}\n2\n\n\n29\nwww.btselem.org\n{\"requests\": \"429\", \"selenium\": \"429\"}\n2\n\n\n30\nwww.cbs.gov.il\nException: &lt;class 'selenium.common.exceptions....\n2\n\n\n31\nwww.hebrewbooks.org\nException: &lt;class 'selenium.common.exceptions....\n2\n\n\n32\nwww.yiddishbookcenter.org\nException: &lt;class 'selenium.common.exceptions....\n2\n\n\n33\nbibpurl.oclc.org\n403\n1\n\n\n34\nbibpurl.oclc.org\nException: &lt;class 'selenium.common.exceptions....\n1\n\n\n35\nbooks.google.com\nException: &lt;class 'selenium.common.exceptions....\n1\n\n\n36\ndigital.casalini.it\n502\n1\n\n\n37\ndigital.library.yale.edu\n404\n1\n\n\n38\neu01.alma.exlibrisgroup.com\n403\n1\n\n\n39\nhdl.handle.net\nunknown_status\n1\n\n\n40\nhdl.library.upenn.edu\nException: &lt;class 'selenium.common.exceptions....\n1\n\n\n41\nlibrary.osu.edu\nException: &lt;class 'selenium.common.exceptions....\n1\n\n\n42\nnbn-resolving.de\nException: &lt;class 'selenium.common.exceptions....\n1\n\n\n43\nopenlibrary.org\nException: &lt;class 'selenium.common.exceptions....\n1\n\n\n44\nprimage.tau.ac.il\nException: &lt;class 'urllib3.exceptions.ReadTime...\n1\n\n\n45\nreshit.hartman.org.il\n403\n1\n\n\n46\nweb.archive.org\nException: &lt;class 'urllib3.exceptions.ReadTime...\n1\n\n\n47\nwww.bet-alpha-editions.com\n403\n1\n\n\n48\nwww.bet-alpha-editions.com\n{\"requests\": \"403\", \"selenium\": \"403\"}\n1\n\n\n49\nwww.bet-alpha-editions.com\n{\"requests\": \"403\", \"selenium\": \"404\"}\n1\n\n\n50\nwww.degruyter.com\n202\n1\n\n\n51\nwww.jpress.org.il\n403\n1\n\n\n52\nwww.jstor.org\n{\"requests\": \"403\", \"selenium\": \"None\"}\n1\n\n\n53\nwww.nli.org.il\n{\"requests\": \"520\", \"selenium\": \"None\"}\n1\n\n\n54\nyizkor.nypl.org\nException: &lt;class 'selenium.common.exceptions....\n1\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nrn\nID\nUnit\nBibID\nURL\nStatus_Requests\nStatus_Selenium\nError_Requests\nError_Selenium\nCheck_Date\n\n\n\n\n0\n1\n257251\nHEB\n957687\nhttp://www.yiddishbookcenter.org/books/browse\n403.0\n403\nNone\nNone\n2025-04-16 16:12:36.711612\n\n\n1\n1\n257252\nHEB\n1010822\nhttp://www.yiddishbookcenter.org/books/browse\n403.0\n403\nNone\nNone\n2025-04-16 16:12:36.711612\n\n\n2\n1\n257253\nHEB\n1010824\nhttp://www.yiddishbookcenter.org/books/browse\n403.0\n403\nNone\nNone\n2025-04-16 16:12:36.711612\n\n\n3\n1\n257254\nHEB\n1013941\nhttp://www.yiddishbookcenter.org/books/browse\n403.0\n403\nNone\nNone\n2025-04-16 16:12:36.711612\n\n\n4\n1\n257255\nHEB\n1026522\nhttp://www.yiddishbookcenter.org/books/browse\n403.0\n403\nNone\nNone\n2025-04-16 16:12:36.711612\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n287\n1\n257539\nHEB\n16046097\nhttps://www.yiddishbookcenter.org/collections/...\n403.0\n403\nNone\nNone\n2025-04-16 16:12:36.711612\n\n\n288\n1\n257540\nHEB\n16088777\nhttp://www.yiddishbookcenter.org/collections/y...\n403.0\n403\nNone\nNone\n2025-04-16 16:12:36.711612\n\n\n289\n1\n257541\nHEB\n16212276\nhttp://www.yiddishbookcenter.org/collections/y...\n403.0\n403\nNone\nNone\n2025-04-16 16:12:36.711612\n\n\n290\n1\n257542\nHEB\n16397286\nhttps://www.yiddishbookcenter.org/collections/...\n403.0\n403\nNone\nNone\n2025-04-16 16:12:36.711612\n\n\n291\n1\n257543\nHEB\n16397962\nhttps://www.yiddishbookcenter.org/collections/...\n403.0\n403\nNone\nNone\n2025-04-16 16:12:36.711612\n\n\n\n\n292 rows × 10 columns"
  }
]